{"ast":null,"code":"export const getPathFromObjectByArray = (obj, path) => {\n  let key = path.pop();\n  let result = path.length !== 0 ? getPathFromObjectByArray(obj, path) : obj;\n  return result ? result[key] : result;\n};\nexport const makeRandomId = (n = 1) => `${Math.round(Math.random() * n)}${Date.now()}`;\nexport const removeKeyFromPathInObject = (obj, path, key) => assignToPathFromObjectToValue(obj, path, key, removeFromArray);\nexport const prependToPathFromObjectToValue = (obj, path, value) => assignToPathFromObjectToValue(obj, path, value, prependInArray);\nexport const appendToPathFromObjectToValue = (obj, path, value, options) => assignToPathFromObjectToValue(obj, path, value, appendInArray, options);\nexport const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n  let keys = path.split('.');\n  return findPathAndAssign(obj, keys, value, action, options);\n};\nexport const getPathFromObject = (obj, path, defaultValue) => {\n  let keys = path.split('.');\n  let result = getPathFromObjectByArray(obj, keys);\n  return result === undefined ? defaultValue : result;\n};\nexport const appendInObject = (obj, value, {\n  deep_level\n} = {}) => {\n  if (deep_level > 0) {\n    let result = Object.assign({}, obj);\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (result.hasOwnProperty(key)) {\n          result[key] = appendInArray(result[key], value[key], {\n            deep_level: deep_level - 1\n          });\n        } else {\n          result[key] = value[key];\n        }\n      }\n    }\n\n    return result;\n  } else {\n    return obj ? Object.assign({}, obj, value) : value;\n  }\n};\nexport function buildIndexOfKeys(list, key = 'id') {\n  let index = {};\n  list.forEach((item, position) => index[item[key]] = position);\n  return index;\n}","map":{"version":3,"sources":["/home/aziza/reactapp/src/helpers.js"],"names":["getPathFromObjectByArray","obj","path","key","pop","result","length","makeRandomId","n","Math","round","random","Date","now","removeKeyFromPathInObject","assignToPathFromObjectToValue","removeFromArray","prependToPathFromObjectToValue","value","prependInArray","appendToPathFromObjectToValue","options","appendInArray","action","keys","split","findPathAndAssign","getPathFromObject","defaultValue","undefined","appendInObject","deep_level","Object","assign","hasOwnProperty","buildIndexOfKeys","list","index","forEach","item","position"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACtD,MAAIC,GAAG,GAAGD,IAAI,CAACE,GAAL,EAAV;AACA,MAAIC,MAAM,GAAGH,IAAI,CAACI,MAAL,KAAgB,CAAhB,GAAoBN,wBAAwB,CAACC,GAAD,EAAMC,IAAN,CAA5C,GAA0DD,GAAvE;AACA,SAAOI,MAAM,GAAGA,MAAM,CAACF,GAAD,CAAT,GAAiBE,MAA9B;AACA,CAJM;AAKP,OAAO,MAAME,YAAY,GAAG,CAACC,CAAC,GAAG,CAAL,KAAY,GAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,CAAzB,CAA4B,GAAEI,IAAI,CAACC,GAAL,EAAW,EAA5E;AACP,OAAO,MAAMC,yBAAyB,GAAG,CAACb,GAAD,EAAMC,IAAN,EAAYC,GAAZ,KAAoBY,6BAA6B,CAACd,GAAD,EAAMC,IAAN,EAAYC,GAAZ,EAAiBa,eAAjB,CAAnF;AACP,OAAO,MAAMC,8BAA8B,GAAG,CAAChB,GAAD,EAAMC,IAAN,EAAYgB,KAAZ,KAAsBH,6BAA6B,CAACd,GAAD,EAAMC,IAAN,EAAYgB,KAAZ,EAAmBC,cAAnB,CAA1F;AACP,OAAO,MAAMC,6BAA6B,GAAG,CAACnB,GAAD,EAAMC,IAAN,EAAYgB,KAAZ,EAAmBG,OAAnB,KAA+BN,6BAA6B,CAACd,GAAD,EAAMC,IAAN,EAAYgB,KAAZ,EAAmBI,aAAnB,EAAkCD,OAAlC,CAAlG;AAEP,OAAO,MAAMN,6BAA6B,GAAG,CAACd,GAAD,EAAMC,IAAN,EAAYgB,KAAZ,EAAmBK,MAAnB,EAA2BF,OAA3B,KAAuC;AACnF,MAAIG,IAAI,GAAGtB,IAAI,CAACuB,KAAL,CAAW,GAAX,CAAX;AACA,SAAOC,iBAAiB,CAACzB,GAAD,EAAMuB,IAAN,EAAYN,KAAZ,EAAmBK,MAAnB,EAA2BF,OAA3B,CAAxB;AACA,CAHM;AAKP,OAAO,MAAMM,iBAAiB,GAAG,CAAC1B,GAAD,EAAMC,IAAN,EAAY0B,YAAZ,KAA6B;AAC7D,MAAIJ,IAAI,GAAGtB,IAAI,CAACuB,KAAL,CAAW,GAAX,CAAX;AACA,MAAIpB,MAAM,GAAGL,wBAAwB,CAACC,GAAD,EAAMuB,IAAN,CAArC;AACA,SAAOnB,MAAM,KAAKwB,SAAX,GAAuBD,YAAvB,GAAsCvB,MAA7C;AACA,CAJM;AAMP,OAAO,MAAMyB,cAAc,GAAG,CAAC7B,GAAD,EAAMiB,KAAN,EAAa;AAACa,EAAAA;AAAD,IAAe,EAA5B,KAAmC;AAChE,MAAIA,UAAU,GAAG,CAAjB,EAAoB;AACnB,QAAI1B,MAAM,GAAG2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,GAAlB,CAAb;;AACA,SAAK,IAAIE,GAAT,IAAgBe,KAAhB,EAAuB;AACtB,UAAIA,KAAK,CAACgB,cAAN,CAAqB/B,GAArB,CAAJ,EAA+B;AAC9B,YAAIE,MAAM,CAAC6B,cAAP,CAAsB/B,GAAtB,CAAJ,EAAgC;AAC/BE,UAAAA,MAAM,CAACF,GAAD,CAAN,GAAcmB,aAAa,CAACjB,MAAM,CAACF,GAAD,CAAP,EAAce,KAAK,CAACf,GAAD,CAAnB,EAA0B;AAAC4B,YAAAA,UAAU,EAAEA,UAAU,GAAG;AAA1B,WAA1B,CAA3B;AACA,SAFD,MAEO;AACN1B,UAAAA,MAAM,CAACF,GAAD,CAAN,GAAce,KAAK,CAACf,GAAD,CAAnB;AACA;AACD;AACD;;AACD,WAAOE,MAAP;AACA,GAZD,MAYO;AACN,WAAOJ,GAAG,GAAG+B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,GAAlB,EAAuBiB,KAAvB,CAAH,GAAmCA,KAA7C;AACA;AACD,CAhBM;AAkBP,OAAO,SAASiB,gBAAT,CAA0BC,IAA1B,EAAgCjC,GAAG,GAAG,IAAtC,EAA4C;AAClD,MAAIkC,KAAK,GAAG,EAAZ;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,QAAP,KAAoBH,KAAK,CAACE,IAAI,CAACpC,GAAD,CAAL,CAAL,GAAmBqC,QAApD;AACA,SAAOH,KAAP;AACA","sourcesContent":["export const getPathFromObjectByArray = (obj, path) => {\n\tlet key = path.pop();\n\tlet result = path.length !== 0 ? getPathFromObjectByArray(obj, path) : obj;\n\treturn result ? result[key] : result;\n}\nexport const makeRandomId = (n = 1) => `${Math.round(Math.random()*n)}${Date.now()}`\nexport const removeKeyFromPathInObject = (obj, path, key) => assignToPathFromObjectToValue(obj, path, key, removeFromArray);\nexport const prependToPathFromObjectToValue = (obj, path, value) => assignToPathFromObjectToValue(obj, path, value, prependInArray);\nexport const appendToPathFromObjectToValue = (obj, path, value, options) => assignToPathFromObjectToValue(obj, path, value, appendInArray, options);\n\nexport const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n\tlet keys = path.split('.');\n\treturn findPathAndAssign(obj, keys, value, action, options);\n}\n\nexport const getPathFromObject = (obj, path, defaultValue) => {\n\tlet keys = path.split('.');\n\tlet result = getPathFromObjectByArray(obj, keys);\n\treturn result === undefined ? defaultValue : result;\n}\n\nexport const appendInObject = (obj, value, {deep_level} = {}) => {\n\tif (deep_level > 0) {\n\t\tlet result = Object.assign({}, obj);\n\t\tfor (var key in value) {\n\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\tif (result.hasOwnProperty(key)) {\n\t\t\t\t\tresult[key] = appendInArray(result[key], value[key], {deep_level: deep_level - 1})\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = value[key]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn obj ? Object.assign({}, obj, value) : value;\n\t}\n}\n\nexport function buildIndexOfKeys(list, key = 'id') {\n\tlet index = {};\n\tlist.forEach((item, position) => index[item[key]] = position);\n\treturn index;\n}\n"]},"metadata":{},"sourceType":"module"}