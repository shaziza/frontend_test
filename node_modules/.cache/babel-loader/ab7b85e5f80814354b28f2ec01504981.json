{"ast":null,"code":"export const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n  let keys = path.split('.');\n  return findPathAndAssign(obj, keys, value, action, options);\n};\nexport const findPathAndAssign = (obj, keys, value, action, options) => {\n  if (keys.length === 0) {\n    return action ? action(obj, value, options) : value;\n  }\n\n  let key = keys.shift();\n  let curr = Array.isArray(obj[key]) ? [...obj[key]] : Object.assign({}, obj[key]);\n  return Object.assign(obj, {\n    [key]: findPathAndAssign(curr, keys, value, action, options)\n  });\n};","map":{"version":3,"sources":["/home/aziza/reactapp/src/helpers.js"],"names":["assignToPathFromObjectToValue","obj","path","value","action","options","keys","split","findPathAndAssign","length","key","shift","curr","Array","isArray","Object","assign"],"mappings":"AAAA,OAAO,MAAMA,6BAA6B,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,OAA3B,KAAuC;AACnF,MAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAX;AACA,SAAOC,iBAAiB,CAACP,GAAD,EAAMK,IAAN,EAAYH,KAAZ,EAAmBC,MAAnB,EAA2BC,OAA3B,CAAxB;AACA,CAHM;AAIP,OAAO,MAAMG,iBAAiB,GAAG,CAACP,GAAD,EAAMK,IAAN,EAAYH,KAAZ,EAAmBC,MAAnB,EAA2BC,OAA3B,KAAuC;AACvE,MAAIC,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACtB,WAAOL,MAAM,GAAGA,MAAM,CAACH,GAAD,EAAME,KAAN,EAAaE,OAAb,CAAT,GAAiCF,KAA9C;AACA;;AACD,MAAIO,GAAG,GAAGJ,IAAI,CAACK,KAAL,EAAV;AACA,MAAIC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcb,GAAG,CAACS,GAAD,CAAjB,IAA0B,CAAC,GAAGT,GAAG,CAACS,GAAD,CAAP,CAA1B,GAA0CK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,GAAG,CAACS,GAAD,CAArB,CAArD;AACA,SAAOK,MAAM,CAACC,MAAP,CAAcf,GAAd,EAAmB;AAAC,KAACS,GAAD,GAAOF,iBAAiB,CAACI,IAAD,EAAON,IAAP,EAAaH,KAAb,EAAoBC,MAApB,EAA4BC,OAA5B;AAAzB,GAAnB,CAAP;AACA,CAPM","sourcesContent":["export const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n\tlet keys = path.split('.');\n\treturn findPathAndAssign(obj, keys, value, action, options);\n}\nexport const findPathAndAssign = (obj, keys, value, action, options) => {\n\tif (keys.length === 0) {\n\t\treturn action ? action(obj, value, options) : value;\n\t}\n\tlet key = keys.shift();\n\tlet curr = Array.isArray(obj[key]) ? [...obj[key]] : Object.assign({}, obj[key]);\n\treturn Object.assign(obj, {[key]: findPathAndAssign(curr, keys, value, action, options)});\n}\n"]},"metadata":{},"sourceType":"module"}