{"ast":null,"code":"export const getPathFromObjectByArray = (obj, path) => {\n  let key = path.pop();\n  let result = path.length !== 0 ? getPathFromObjectByArray(obj, path) : obj;\n  return result ? result[key] : result;\n};\nexport const getPathFromObject = (obj, path, defaultValue) => {\n  let keys = path.split('.');\n  let result = getPathFromObjectByArray(obj, keys);\n  return result === undefined ? defaultValue : result;\n};\nexport const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n  let keys = path.split('.');\n  return findPathAndAssign(obj, keys, value, action, options);\n};\nexport const findPathAndAssign = (obj, keys, value, action, options) => {\n  if (keys.length === 0) {\n    return action ? action(obj, value, options) : value;\n  }\n\n  let key = keys.shift();\n  let curr = Array.isArray(obj[key]) ? [...obj[key]] : Object.assign({}, obj[key]);\n  return Object.assign(obj, {\n    [key]: findPathAndAssign(curr, keys, value, action, options)\n  });\n};\nexport const appendInArray = (arr, value, {\n  deep_level = 0\n} = {}) => {\n  if (Array.isArray(value)) return [...arr, ...value];\n  if (typeof value === 'object') return appendInObject(arr, value, {\n    deep_level\n  });\n  return Array.isArray(arr) ? [...arr, value] : value;\n};\nexport const appendInObject = (obj, value, {\n  deep_level\n} = {}) => {\n  if (deep_level > 0) {\n    let result = Object.assign({}, obj);\n\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (result.hasOwnProperty(key)) {\n          result[key] = appendInArray(result[key], value[key], {\n            deep_level: deep_level - 1\n          });\n        } else {\n          result[key] = value[key];\n        }\n      }\n    }\n\n    return result;\n  } else {\n    return obj ? Object.assign({}, obj, value) : value;\n  }\n};","map":{"version":3,"sources":["/home/aziza/frontend_test/src/helpers.js"],"names":["getPathFromObjectByArray","obj","path","key","pop","result","length","getPathFromObject","defaultValue","keys","split","undefined","assignToPathFromObjectToValue","value","action","options","findPathAndAssign","shift","curr","Array","isArray","Object","assign","appendInArray","arr","deep_level","appendInObject","hasOwnProperty"],"mappings":"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","sourcesContent":["export const getPathFromObjectByArray = (obj, path) => {\n\tlet key = path.pop();\n\tlet result = path.length !== 0 ? getPathFromObjectByArray(obj, path) : obj;\n\treturn result ? result[key] : result;\n}\nexport const getPathFromObject = (obj, path, defaultValue) => {\n\tlet keys = path.split('.');\n\tlet result = getPathFromObjectByArray(obj, keys);\n\treturn result === undefined ? defaultValue : result;\n}\nexport const assignToPathFromObjectToValue = (obj, path, value, action, options) => {\n\tlet keys = path.split('.');\n\treturn findPathAndAssign(obj, keys, value, action, options);\n}\nexport const findPathAndAssign = (obj, keys, value, action, options) => {\n\tif (keys.length === 0) {\n\t\treturn action ? action(obj, value, options) : value;\n\t}\n\tlet key = keys.shift();\n\tlet curr = Array.isArray(obj[key]) ? [...obj[key]] : Object.assign({}, obj[key]);\n\treturn Object.assign(obj, {[key]: findPathAndAssign(curr, keys, value, action, options)});\n}\nexport const appendInArray = (arr, value, {deep_level = 0} = {}) => {\n\tif (Array.isArray(value)) return [...arr, ...value];\n\tif (typeof(value) === 'object') return appendInObject(arr, value, {deep_level});\n\treturn Array.isArray(arr) ? [...arr, value] : (value);\n};\nexport const appendInObject = (obj, value, {deep_level} = {}) => {\n\tif (deep_level > 0) {\n\t\tlet result = Object.assign({}, obj);\n\t\tfor (var key in value) {\n\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\tif (result.hasOwnProperty(key)) {\n\t\t\t\t\tresult[key] = appendInArray(result[key], value[key], {deep_level: deep_level - 1})\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = value[key]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn obj ? Object.assign({}, obj, value) : value;\n\t}\n}"]},"metadata":{},"sourceType":"module"}