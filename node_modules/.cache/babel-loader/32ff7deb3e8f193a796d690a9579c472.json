{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aziza/frontend_test/src/components/ListPosts.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Pagination from \"react-js-pagination\";\nimport { getPosts } from '../actions/actions.js';\nimport { POSTS_KEY, COUNT_PAGES_KEY } from '../actions/keys';\nimport { getPathFromObject } from '../helpers.js';\nimport PostCard from './PostCard';\n\nclass ListPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active_page: 1,\n      selected: {}\n    };\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getPosts(id);\n  }\n\n  handlePageChange(pageNumber) {\n    this.setState({\n      activePage: pageNumber\n    });\n    this.props.getUsers(pageNumber);\n  }\n\n  onSelect(item_id) {\n    const selected = Object.assign({}, this.state.selected);\n\n    if (!selected[item_id]) {\n      const selected = {\n        [item_id]: true\n      };\n      this.setState({\n        selected\n      });\n    } else {\n      this.setState({\n        selected: {}\n      });\n    }\n  }\n\n  renderPosts() {\n    const posts = this.props.posts;\n    return posts.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item_list\",\n        children: posts.map(i => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            params: i,\n            onSelect: () => this.onSelect(i.id),\n            isSelected: this.state.selected[i.id]\n          }, i.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: this.props.pagination.pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n          hideDisabled: true,\n          activePage: this.state.active_page,\n          itemsCountPerPage: 12,\n          totalItemsCount: this.props.pagination && this.props.pagination.pages,\n          pageRangeDisplayed: 10,\n          itemClass: \"page-item\",\n          linkClass: \"page-link\",\n          getPageUrl: i => `/?page=${i}`,\n          onChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this) : 'Ничего не найдено';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: getPathFromObject(state.database, POSTS_KEY, []),\n    pagination: getPathFromObject(state.database, `${COUNT_PAGES_KEY}.posts`, [])\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPosts(id) {\n      return dispatch(getPosts(id));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPosts);","map":{"version":3,"sources":["/home/aziza/frontend_test/src/components/ListPosts.js"],"names":["React","Component","Fragment","connect","Pagination","getPosts","POSTS_KEY","COUNT_PAGES_KEY","getPathFromObject","PostCard","ListPosts","constructor","props","state","active_page","selected","handlePageChange","bind","onSelect","componentDidMount","id","match","params","pageNumber","setState","activePage","getUsers","item_id","Object","assign","renderPosts","posts","length","map","i","pagination","pages","render","mapStateToProps","database","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\nimport Pagination from \"react-js-pagination\";\nimport {\n\tgetPosts\n} from '../actions/actions.js'\nimport {\n\tPOSTS_KEY,\n\tCOUNT_PAGES_KEY\n} from '../actions/keys';\nimport {\n\tgetPathFromObject\n} from '../helpers.js';\nimport PostCard from './PostCard'\n\nclass ListPosts extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactive_page: 1,\n\t\t\tselected: {},\n\t\t}\n\t\tthis.handlePageChange = this.handlePageChange.bind(this);\n\t\tthis.onSelect = this.onSelect.bind(this);\n\t  }\n\tcomponentDidMount() {\n\t\tconst id = this.props.match.params.id;\n\t\tthis.props.getPosts(id);\n\t}\n\thandlePageChange(pageNumber) {\n\t\tthis.setState({activePage: pageNumber});\n\t\tthis.props.getUsers(pageNumber);\n\t}\n\tonSelect(item_id) {\n\t\tconst selected = Object.assign({}, this.state.selected);\n\t\tif (!selected[item_id]) {\n\t\t\tconst selected = {[item_id]: true};\n\t\t\tthis.setState({\n\t\t\t\tselected, \n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({selected: {}});\n\t\t}\n\t}\n\trenderPosts() {\n\t\tconst posts = this.props.posts;\n\t\treturn posts.length > 0 ? (\n\t\t<Fragment>\n\t\t\t<div className='item_list'>  \n\t\t\t\t{posts.map((i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<PostCard \t\n\t\t\t\t\t\t\tkey={i.id} \n\t\t\t\t\t\t\tparams={i} \n\t\t\t\t\t\t\tonSelect={() => this.onSelect(i.id)} \n\t\t\t\t\t\t\tisSelected={this.state.selected[i.id]} />\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className='pagination'>\n\t\t\t\t{this.props.pagination.pages > 1 && (\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\thideDisabled\n\t\t\t\t\t\tactivePage={this.state.active_page}\n\t\t\t\t\t\titemsCountPerPage={12}\n\t\t\t\t\t\ttotalItemsCount={this.props.pagination && this.props.pagination.pages}\n\t\t\t\t\t\tpageRangeDisplayed={10}\n\t\t\t\t\t\titemClass='page-item'\n\t\t\t\t\t\tlinkClass='page-link'\n\t\t\t\t\t\tgetPageUrl={(i) => `/?page=${i}`}\n\t\t\t\t\t\tonChange={this.handlePageChange} />\n\t\t\t\t)}\n\t\t\t</div>\n\t</Fragment>\n\t) : 'Ничего не найдено';\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderPosts()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tposts : getPathFromObject(state.database, POSTS_KEY, []),\n\t\tpagination: getPathFromObject(state.database, `${COUNT_PAGES_KEY}.posts`, []),\n\t}\n  }\n   \n  const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tgetPosts(id) {\n\t\t\treturn dispatch(getPosts(id));\n\t\t},\n\t}\n  }\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ListPosts);\n"]},"metadata":{},"sourceType":"module"}