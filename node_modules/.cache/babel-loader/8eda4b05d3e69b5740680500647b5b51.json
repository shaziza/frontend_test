{"ast":null,"code":"/**\n * @param {String} url\n * Делает запрос по заданному к API с помощью fetch. Также обновляет статус \"онлайн\" каждый 30 секунд, если запросов в течении этого времени не было\n * @param {String} [method='get']\n * @param {Object} params\n * @param {Boolean} [token=true] is auth needed\n * @param {Boolean} is_url_full\n * @param {Object} options:\n * - parse_type - json | text\n * - token\n * - abortController\n * @return {Promise}\n */\nexport function request(url, method = 'GET', params) {\n  let body;\n\n  if (params) {\n    switch (method) {\n      case 'GET':\n      case 'get':\n        url = url; // saveLog(url);\n\n        break;\n\n      case 'POST':\n      case 'post':\n        body = JSON.stringify(params); // saveLog(body);\n\n        break;\n    }\n  }\n\n  return fetch(url, {\n    method: method,\n    body: body\n  }).then(response => {\n    return response.json();\n  }).catch(error => {\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"sources":["/home/aziza/reactapp/src/actions/request.js"],"names":["request","url","method","params","body","JSON","stringify","fetch","then","response","json","catch","error","Promise","reject"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,MAAM,GAAG,KAA/B,EAAsCC,MAAtC,EAA8C;AACjD,MAAIC,IAAJ;;AACA,MAAKD,MAAL,EAAc;AAChB,YAAQD,MAAR;AACC,WAAK,KAAL;AACA,WAAK,KAAL;AACED,QAAAA,GAAG,GAAGA,GAAN,CADF,CAEE;;AACA;;AACF,WAAK,MAAL;AACA,WAAK,MAAL;AACEG,QAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAP,CADF,CAEE;;AACA;AAVH;AAYA;;AACD,SAAOI,KAAK,CAACN,GAAD,EAAM;AACjBC,IAAAA,MAAM,EAAEA,MADS;AAEjBE,IAAAA,IAAI,EAAEA;AAFW,GAAN,CAAL,CAGJI,IAHI,CAGCC,QAAQ,IAAI;AACnB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,GALM,EAKJC,KALI,CAKEC,KAAK,IAAI;AACjB,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,GAPM,CAAP;AAQA","sourcesContent":["\n/**\n * @param {String} url\n * Делает запрос по заданному к API с помощью fetch. Также обновляет статус \"онлайн\" каждый 30 секунд, если запросов в течении этого времени не было\n * @param {String} [method='get']\n * @param {Object} params\n * @param {Boolean} [token=true] is auth needed\n * @param {Boolean} is_url_full\n * @param {Object} options:\n * - parse_type - json | text\n * - token\n * - abortController\n * @return {Promise}\n */\n\nexport function request(url, method = 'GET', params) {\n    let body;\n    if ( params ) {\n\t\tswitch (method) {\n\t\t\tcase 'GET':\n\t\t\tcase 'get':\n\t\t\t  url = url;\n\t\t\t  // saveLog(url);\n\t\t\t  break;\n\t\t\tcase 'POST':\n\t\t\tcase 'post':\n\t\t\t  body = JSON.stringify(params);\n\t\t\t  // saveLog(body);\n\t\t\t  break;\n\t\t}\n\t}\n\treturn fetch(url, {\n\t\tmethod: method,\n\t\tbody: body,\n\t}).then(response => {\n\t\treturn response.json();\n\t}).catch(error => {\n\t\treturn Promise.reject(error);\n\t});\n}"]},"metadata":{},"sourceType":"module"}