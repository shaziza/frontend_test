{"ast":null,"code":"import { ADD_TO_FILELOADER, UPDATE_IN_FILELOADER, UPDATE_FILELOADER_PROGRESS, CLOSE_FILELOADER } from '../actions/actionsTypes';\n\nconst fileloaderReducer = (state = {\n  active: false,\n  files: {},\n  wait: {}\n}, action) => {\n  switch (action.type) {\n    case ADD_TO_FILELOADER:\n      return {\n        active: true,\n        files: Object.assign(state.files, {\n          [action.id]: {\n            image: state.image,\n            state: 'loading',\n            progress: {\n              loading: 0,\n              total: 100\n            }\n          }\n        }),\n        wait: state.wait\n      };\n\n    case UPDATE_FILELOADER_PROGRESS:\n      return {\n        active: state.active,\n        files: Object.assign({}, state.files, {\n          [action.id]: {\n            image: state.files[action.id].image,\n            state: 'loading',\n            progress: action.progress\n          }\n        }),\n        wait: state.wait\n      };\n\n    case UPDATE_IN_FILELOADER:\n      const wait = { ...state.wait\n      }; // eslint-disable-line\n\n      let progress = state.files[action.id].progress; // eslint-disable-line\n\n      if (action.state === 'loaded') {\n        wait[action.file.id] = {\n          id: action.id,\n          file: action.file,\n          destination: action.destination\n        };\n        progress = {\n          loaded: 99,\n          total: 100\n        };\n      } else if (action.state === 'ready') {\n        delete wait[action.file.id];\n      }\n\n      return {\n        active: state.active,\n        files: Object.assign({}, state.files, {\n          [action.id]: {\n            image: state.files[action.id].image,\n            state: action.state ? action.state : state.files[action.id].state,\n            progress\n          }\n        }),\n        wait\n      };\n\n    case CLOSE_FILELOADER:\n      return {\n        active: false,\n        files: {},\n        wait: {}\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default fileloaderReducer;","map":{"version":3,"sources":["/home/aziza/reactapp/src/reducers/fileloader.js"],"names":["ADD_TO_FILELOADER","UPDATE_IN_FILELOADER","UPDATE_FILELOADER_PROGRESS","CLOSE_FILELOADER","fileloaderReducer","state","active","files","wait","action","type","Object","assign","id","image","progress","loading","total","file","destination","loaded"],"mappings":"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","sourcesContent":["import {\n\tADD_TO_FILELOADER,\n\tUPDATE_IN_FILELOADER,\n\tUPDATE_FILELOADER_PROGRESS,\n\tCLOSE_FILELOADER\n} from '../actions/actionsTypes';\n\nconst fileloaderReducer = (state = {\n\tactive: false,\n\tfiles: {},\n\twait: {}\n}, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TO_FILELOADER:\n\t\t\treturn {\n\t\t\t\tactive: true,\n\t\t\t\tfiles: Object.assign(state.files, {\n\t\t\t\t\t[action.id]: {\n\t\t\t\t\t\timage: state.image,\n\t\t\t\t\t\tstate: 'loading',\n\t\t\t\t\t\tprogress: {loading: 0, total: 100},\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\twait: state.wait\n\t\t\t};\n\t\tcase UPDATE_FILELOADER_PROGRESS:\n\t\t\treturn {\n\t\t\t\tactive: state.active,\n\t\t\t\tfiles: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tstate.files,\n\t\t\t\t\t{[action.id]: {\n\t\t\t\t\t\timage: state.files[action.id].image,\n\t\t\t\t\t\tstate: 'loading',\n\t\t\t\t\t\tprogress: action.progress,\n\t\t\t\t\t}}\n\t\t\t\t),\n\t\t\t\twait: state.wait\n\t\t\t};\n\t\tcase UPDATE_IN_FILELOADER:\n\t\t\tconst wait = {...state.wait}; // eslint-disable-line\n\t\t\tlet progress = state.files[action.id].progress; // eslint-disable-line\n\t\t\tif (action.state === 'loaded') {\n\t\t\t\twait[action.file.id] = {id: action.id, file: action.file, destination: action.destination};\n\t\t\t\tprogress = {loaded: 99, total: 100}\n\t\t\t} else if (action.state === 'ready') {\n\t\t\t\tdelete wait[action.file.id];\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tactive: state.active,\n\t\t\t\tfiles: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tstate.files,\n\t\t\t\t\t{[action.id]: {\n\t\t\t\t\t\timage: state.files[action.id].image,\n\t\t\t\t\t\tstate: action.state ? action.state : state.files[action.id].state,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t}}\n\t\t\t\t),\n\t\t\t\twait\n\t\t\t};\n\t\tcase CLOSE_FILELOADER:\n\t\t\treturn { active: false, files: {}, wait: {} };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default fileloaderReducer;\n"]},"metadata":{},"sourceType":"module"}