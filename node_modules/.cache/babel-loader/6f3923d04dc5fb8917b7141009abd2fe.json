{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aziza/reactapp/src/components/PostPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPost, getComments } from '../actions/actions.js';\nimport { POST_KEY, COMMENTS_KEY } from '../actions/keys';\nimport { getPathFromObject } from '../helpers.js';\nimport Comments from './Comments.js';\n\nclass PostPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_comments: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const post_id = this.props.match.params.postId;\n    this.props.getPost(id, post_id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.location !== nextProps.location) {\n      if (nextProps.location.search === \"?comments=true\") {\n        console.log('5665');\n        this.props.getComments(this.props.post.id);\n        if (this.props.comments) this.setState({\n          show_comments: true\n        });\n      }\n    }\n  }\n\n  onClick() {\n    this.props.getComments(this.props.post.id);\n    if (this.props.comments) this.setState({\n      show_comments: true\n    });\n    this.props.history.push({\n      search: `?comments=true`\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.post ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.props.post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onClick,\n          className: \"button\",\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this) : 'Ничего не найдено', this.state.show_comments && /*#__PURE__*/_jsxDEV(Comments, {\n        items: this.props.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    post: getPathFromObject(state.database, POST_KEY, []),\n    comments: getPathFromObject(state.database, COMMENTS_KEY, [])\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPost(id, post_id) {\n      return dispatch(getPost(id, post_id));\n    },\n\n    getComments(id) {\n      return dispatch(getComments(id));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);","map":{"version":3,"sources":["/home/aziza/reactapp/src/components/PostPage.js"],"names":["React","Component","connect","getPost","getComments","POST_KEY","COMMENTS_KEY","getPathFromObject","Comments","PostPage","constructor","props","state","show_comments","onClick","bind","componentDidMount","id","match","params","post_id","postId","componentWillReceiveProps","nextProps","location","search","console","log","post","comments","setState","history","push","render","title","body","mapStateToProps","database","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tgetPost,\n\tgetComments\n} from '../actions/actions.js'\nimport {\n\tPOST_KEY,\n\tCOMMENTS_KEY\n} from '../actions/keys';\nimport {\n\tgetPathFromObject\n} from '../helpers.js';\nimport Comments from './Comments.js';\n\nclass PostPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tshow_comments: false\n\t\t}\n\t\tthis.onClick = this.onClick.bind(this);\n\t  }\n\tcomponentDidMount() {\n\t\tconst id = this.props.match.params.id;\n\t\tconst post_id = this.props.match.params.postId;\n\t\tthis.props.getPost(id, post_id);\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.location !== nextProps.location) {\n\t\t\tif (nextProps.location.search === \"?comments=true\") {\n\t\t\t\tconsole.log('5665');\n\t\t\t\tthis.props.getComments(this.props.post.id);\n\t\t\t\tif (this.props.comments) this.setState({show_comments: true});\n\t\t\t}\n\t\t}\n\t}\n\tonClick() {\n\t\tthis.props.getComments(this.props.post.id);\n\t\tif (this.props.comments) this.setState({show_comments: true});\n\t\tthis.props.history.push({search: `?comments=true`});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.post ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t{this.props.post.title}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{this.props.post.body}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<button onClick={this.onClick} className='button'>Показать комментарии</button>\n\t\t\t\t\t</div>\n\t\t\t\t) : 'Ничего не найдено'}\n\t\t\t\t{this.state.show_comments && <Comments items={this.props.comments}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpost : getPathFromObject(state.database, POST_KEY, []),\n\t\tcomments: getPathFromObject(state.database, COMMENTS_KEY, []),\n\t}\n  }\n   \n  const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tgetPost(id, post_id) {\n\t\t\treturn dispatch(getPost(id, post_id));\n\t\t},\n\t\tgetComments(id) {\n\t\t\treturn dispatch(getComments(id));\n\t\t}\n\t}\n  }\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(PostPage);"]},"metadata":{},"sourceType":"module"}