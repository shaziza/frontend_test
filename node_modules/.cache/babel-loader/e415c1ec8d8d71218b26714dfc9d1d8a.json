{"ast":null,"code":"// import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunkMiddleware from 'redux-thunk'\n// import rootReducer from '../reducers/';  \n\n/*Create a function called configureStore */\n// export default function configureStore() {  \n//   const reducer = combineReducers(rootReducer)\n//   return createStore(reducer, applyMiddleware(thunk));\n// }\n// export default async function configureStore() {\n// \tlet initialState = Object.assign({\n// \t\tisClient: false,\n// \t\tssrInfo: {\n// \t\t\tavailable: true\n// \t\t}\n// \t});\n//   const reducer = combineReducers(rootReducer)\n// \tlet store = createStore(reducer, initialState, applyMiddleware(thunkMiddleware));\n// \treturn store;\n// }\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunkMiddleware from 'redux-thunk';\nconst finalCreateStore = compose(applyMiddleware(thunkMiddleware))(createStore);\nexport default function configureStore(initialState) {\n  const reducer = combineReducers(rootReducer);\n  return finalCreateStore(reducer, initialState);\n}","map":{"version":3,"sources":["/home/aziza/reactapp/src/store/configureStore.js"],"names":["createStore","applyMiddleware","combineReducers","compose","rootReducer","thunkMiddleware","finalCreateStore","configureStore","initialState","reducer"],"mappings":"AAAA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,gBAAgB,GAAGH,OAAO,CAC9BF,eAAe,CAACI,eAAD,CADe,CAAP,CAEvBL,WAFuB,CAAzB;AAIA,eAAe,SAASO,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAMC,OAAO,GAAGP,eAAe,CAACE,WAAD,CAA/B;AACA,SAAOE,gBAAgB,CAACG,OAAD,EAAUD,YAAV,CAAvB;AACD","sourcesContent":["// import { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunkMiddleware from 'redux-thunk'\n// import rootReducer from '../reducers/';  \n\n/*Create a function called configureStore */\n\n// export default function configureStore() {  \n//   const reducer = combineReducers(rootReducer)\n//   return createStore(reducer, applyMiddleware(thunk));\n// }\n\n// export default async function configureStore() {\n// \tlet initialState = Object.assign({\n// \t\tisClient: false,\n// \t\tssrInfo: {\n// \t\t\tavailable: true\n// \t\t}\n// \t});\n//   const reducer = combineReducers(rootReducer)\n// \tlet store = createStore(reducer, initialState, applyMiddleware(thunkMiddleware));\n// \treturn store;\n// }\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunkMiddleware from 'redux-thunk';\n\nconst finalCreateStore = compose(\n  applyMiddleware(thunkMiddleware),\n)(createStore);\n\nexport default function configureStore(initialState) {\n  const reducer = combineReducers(rootReducer)\n  return finalCreateStore(reducer, initialState);\n}\n"]},"metadata":{},"sourceType":"module"}