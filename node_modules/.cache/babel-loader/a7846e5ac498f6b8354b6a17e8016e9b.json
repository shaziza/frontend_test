{"ast":null,"code":"// import initialState from './initialState';\nimport { SET_IN_DATABASE_BY_PATH, MERGE_ENTITIES_IN_DATABASE } from '../actions/actionsTypes';\nimport { assignToPathFromObjectToValue, appendInObject } from \"../helpers\";\nimport { USERS_KEY, POST_KEY } from '../actions/keys';\n\nconst databaseReducer = (state = {\n  [USERS_KEY]: {}\n}, action) => {\n  let new_state = { ...state\n  };\n  console.log(action);\n\n  switch (action.type) {\n    case MERGE_ENTITIES_IN_DATABASE:\n      [POST_KEY].forEach(key => {\n        if (action.entities[key]) {\n          new_state[key] = appendInObject(new_state[key], action.entities[key], {\n            deep_level: 1\n          });\n        }\n      });\n      return new_state;\n\n    case SET_IN_DATABASE_BY_PATH:\n      return Object.assign({}, state, assignToPathFromObjectToValue(new_state, action.path, action.data));\n\n    default:\n      return state;\n  }\n};\n\nexport default databaseReducer;","map":{"version":3,"sources":["/home/aziza/reactapp/src/reducers/databaseReducer.js"],"names":["SET_IN_DATABASE_BY_PATH","MERGE_ENTITIES_IN_DATABASE","assignToPathFromObjectToValue","appendInObject","USERS_KEY","POST_KEY","databaseReducer","state","action","new_state","console","log","type","forEach","key","entities","deep_level","Object","assign","path","data"],"mappings":"AAAA;AACA,SACCA,uBADD,EAECC,0BAFD,QAGO,yBAHP;AAIA,SACCC,6BADD,EAECC,cAFD,QAGO,YAHP;AAIA,SACCC,SADD,EAECC,QAFD,QAGO,iBAHP;;AAKA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAC;AAC9B,GAACH,SAAD,GAAa;AADiB,CAAP,EAErBI,MAFqB,KAEV;AACb,MAAIC,SAAS,GAAG,EAAC,GAAGF;AAAJ,GAAhB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACG,UAAOA,MAAM,CAACI,IAAd;AACF,SAAKX,0BAAL;AACC,OACCI,QADD,EAEEQ,OAFF,CAEUC,GAAG,IAAI;AAChB,YAAIN,MAAM,CAACO,QAAP,CAAgBD,GAAhB,CAAJ,EAA0B;AACzBL,UAAAA,SAAS,CAACK,GAAD,CAAT,GAAiBX,cAAc,CAACM,SAAS,CAACK,GAAD,CAAV,EAAiBN,MAAM,CAACO,QAAP,CAAgBD,GAAhB,CAAjB,EAAuC;AAACE,YAAAA,UAAU,EAAE;AAAb,WAAvC,CAA/B;AACA;AACD,OAND;AAOA,aAAOP,SAAP;;AACD,SAAKT,uBAAL;AACC,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyBL,6BAA6B,CAACO,SAAD,EAAYD,MAAM,CAACW,IAAnB,EAAyBX,MAAM,CAACY,IAAhC,CAAtD,CAAP;;AACD;AAAS,aAAOb,KAAP;AAZP;AAcH,CAnBD;;AAqBA,eAAeD,eAAf","sourcesContent":["// import initialState from './initialState';\nimport {\n\tSET_IN_DATABASE_BY_PATH,\n\tMERGE_ENTITIES_IN_DATABASE\n} from '../actions/actionsTypes';\nimport {\n\tassignToPathFromObjectToValue,\n\tappendInObject\n} from \"../helpers\";\nimport {\n\tUSERS_KEY,\n\tPOST_KEY\n} from '../actions/keys';\n\nconst databaseReducer = (state={\n\t[USERS_KEY]: {}\n}, action) => {\n\tlet new_state = {...state};\n\tconsole.log(action);\n    switch(action.type) {\n\t\tcase MERGE_ENTITIES_IN_DATABASE:\n\t\t\t[\n\t\t\t\tPOST_KEY\n\t\t\t].forEach(key => {\n\t\t\t\tif (action.entities[key]) {\n\t\t\t\t\tnew_state[key] = appendInObject(new_state[key], action.entities[key], {deep_level: 1});\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn new_state;\n\t\tcase SET_IN_DATABASE_BY_PATH:\n\t\t\treturn Object.assign({}, state, assignToPathFromObjectToValue(new_state, action.path, action.data));\n\t\tdefault: return state;\n\t}\n}\n\nexport default databaseReducer;\n"]},"metadata":{},"sourceType":"module"}